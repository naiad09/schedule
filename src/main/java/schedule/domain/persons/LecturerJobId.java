package schedule.domain.persons;
// Generated 08.05.2016 21:15:35 by Hibernate Tools 4.0.0

import javax.persistence.Embeddable;
import javax.persistence.Embedded;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.validation.constraints.NotNull;

import schedule.domain.struct.Chair;


/**
 * LecturerJobId generated by hbm2java
 */
@Embeddable
public class LecturerJobId implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	@ManyToOne()
	@NotNull
	@JoinColumn(name = "id_chair")
	private Chair chair;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_lecturer", updatable = false)
	@Embedded
	private Lecturer lecturer;
	
	public Chair getChair() {
		return chair;
	}
	
	public void setChair(Chair chair) {
		this.chair = chair;
	}
	
	public Lecturer getLecturer() {
		return lecturer;
	}
	
	public void setLecturer(Lecturer lecturer) {
		this.lecturer = lecturer;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((chair == null) ? 0 : chair.hashCode());
		result = prime * result + ((lecturer == null) ? 0 : lecturer.hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj) return true;
		if (obj == null) return false;
		if (getClass() != obj.getClass()) return false;
		LecturerJobId other = (LecturerJobId) obj;
		if (chair == null) {
			if (other.chair != null) return false;
		} else if (!chair.equals(other.chair)) return false;
		if (lecturer == null) {
			if (other.lecturer != null) return false;
		} else if (!lecturer.equals(other.lecturer)) return false;
		return true;
	}
}
